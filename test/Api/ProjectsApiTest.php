<?php
/**
 * ProjectsApiTest
 * PHP version 7.4
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * API V2
 *
 * Connect your software to POEditor with this simple API
 *
 * The version of the OpenAPI document: 1.0.3
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 6.5.0-SNAPSHOT
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace OpenAPI\Client\Test\Api;

use \OpenAPI\Client\Configuration;
use \OpenAPI\Client\ApiException;
use \OpenAPI\Client\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * ProjectsApiTest Class Doc Comment
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class ProjectsApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for projectsAddPost
     *
     * Creates a new project. Returns project details (if successful).
     *
     */
    public function testProjectsAddPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for projectsDeletePost
     *
     * Deletes the project from the account. You must be the owner of the project..
     *
     */
    public function testProjectsDeletePost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for projectsExportPost
     *
     * Returns the link of the file (expires after 10 minutes). The settings inherited from the project will be the ones at the time of the download..
     *
     */
    public function testProjectsExportPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for projectsListPost
     *
     * Returns the list of projects owned by user..
     *
     */
    public function testProjectsListPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for projectsSyncPost
     *
     * Syncs your project with the array you send (terms that are not found in the JSON object will be deleted from project and the new ones added). Please use with caution. If wrong data is sent, existing terms and their translations might be irreversibly lost..
     *
     */
    public function testProjectsSyncPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for projectsUpdatePost
     *
     * Updates project settings (name, description, reference language, fallback language). If optional parameters are not sent, their respective fields are not updated..
     *
     */
    public function testProjectsUpdatePost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for projectsUploadPost
     *
     * Updates terms / translations - No more than one request every 30 seconds..
     *
     */
    public function testProjectsUploadPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for projectsViewPost
     *
     * Returns projects details.
     *
     */
    public function testProjectsViewPost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }
}
